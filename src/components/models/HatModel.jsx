// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: Medhatelo (https://sketchfab.com/Medhatelo)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/astronaut-helmet-315605194a474c7b95cd2a9083985d22
// Title: Astronaut Helmet
// */

// "use client";
// import React, { useRef, useEffect, useState } from "react";
// import { useGLTF, useAnimations } from "@react-three/drei";
// import { useFrame } from "@react-three/fiber";

// const HatModel = React.memo(function HatModel(props) {
//   const group = useRef();
//   const { nodes, materials, animations } = useGLTF(
//     "/models/helmet-transformed.glb"
//   );

//   const modelRef = useRef();

//   useFrame(() => {
//     modelRef.current.rotation.y += 0.007;
//   });
//   const { actions } = useAnimations(animations, group);

//   const [position, setPosition] = useState([0, 0, 0]);

//   useEffect(() => {
//     const updatePosition = () => {
//       if (window.innerWidth < 768) {
//         // Mobile position
//         setPosition([0, 0.1, 0]);
//       } else {
//         // Desktop position
//         setPosition([0, -0.6, 0]);
//       }
//     };

    
//     updatePosition();
        
//     window.addEventListener("resize", updatePosition);

//     return () => window.removeEventListener("resize", updatePosition);
//   }, []);

//   return (
//     <group
//       ref={modelRef}
//       {...props}
//       dispose={null}
//       scale={[0.06, 0.06, 0.06]}
//       rotation={[0.4, -1, 0]}
//       position={position}
//     >
//       <group name="Sketchfab_Scene">
//         <group
//           name="Helmet-Body"
//           position={[-0.177, 20.789, 0.06]}
//           rotation={[-Math.PI / 2, 0, 0]}
//         >
//           <group
//             name="Black-one"
//             position={[0, -3.421, -1.917]}
//             rotation={[-1.82, 0, 0]}
//           >
//             <group name="Object_8" position={[0, -0.185, -0.149]}>
//               <mesh
//                 name="Black-one_Standard_14_0"
//                 castShadow
//                 receiveShadow
//                 geometry={nodes["Black-one_Standard_14_0"].geometry}
//                 material={materials.Standard_14}
//               />
//             </group>
//           </group>
//         </group>
//         <mesh
//           name="Helmet-Body_Helmet-Body_0"
//           castShadow
//           receiveShadow
//           geometry={nodes["Helmet-Body_Helmet-Body_0"].geometry}
//           material={materials["Helmet-Body"]}
//           position={[-0.177, 20.789, 0.06]}
//           rotation={[-Math.PI / 2, 0, 0]}
//         />
//         <mesh
//           name="Helmet-Body_helmet_glass_0"
//           castShadow
//           receiveShadow
//           geometry={nodes["Helmet-Body_helmet_glass_0"].geometry}
//           material={materials.helmet_glass}
//           position={[-0.177, 20.789, 0.06]}
//           rotation={[-Math.PI / 2, 0, 0]}
//         />
//       </group>
//     </group>
//   );
// });

// export default HatModel;
// useGLTF.preload("/models/helmet-transformed.glb");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Medhatelo (https://sketchfab.com/Medhatelo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/astronaut-helmet-315605194a474c7b95cd2a9083985d22
Title: Astronaut Helmet
*/

"use client";
import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const HatModel = React.memo(function HatModel(props) {
  const group = useRef();
  const modelRef = useRef();

  // Load the optimized GLB model
  const { nodes, materials, animations } = useGLTF("/models/helmet-optimized.glb");
  const { actions } = useAnimations(animations, group);

  // Responsive positioning state
  const [position, setPosition] = useState([0, 0, 0]);

  // Animation: Rotate the model
  useFrame(() => {
    if (modelRef.current) {
      modelRef.current.rotation.y += 0.007;
    }
  });

  // Handle responsive positioning based on window size
  useEffect(() => {
    const updatePosition = () => {
      if (window.innerWidth < 768) {
        // Mobile position
        setPosition([0, 0.1, 0]);
      } else {
        // Desktop position
        setPosition([0, -0.6, 0]);
      }
    };

    updatePosition();
    window.addEventListener("resize", updatePosition);

    return () => window.removeEventListener("resize", updatePosition);
  }, []);

  return (
    <group
      ref={modelRef}
      {...props}
      dispose={null}
      scale={[0.06, 0.06, 0.06]}
      rotation={[0.4, -1, 0]}
      position={position}
    >
      <group ref={group} name="Sketchfab_Scene">
        <group position={[-15.138, -14.674, -13.816]} scale={0.003}>
          <mesh
            name="mesh_0"
            castShadow
            receiveShadow
            geometry={nodes.mesh_0.geometry}
            material={materials["Helmet-Body"]}
          />
          <mesh
            name="mesh_0_1"
            castShadow
            receiveShadow
            geometry={nodes.mesh_0_1.geometry}
            material={materials.helmet_glass}
          />
        </group>
        <group
          name="Helmet-Body"
          position={[-0.177, 20.789, 0.06]}
          rotation={[-Math.PI / 2, 0, 0]}
        >
          <group
            name="Black-one"
            position={[0, -3.421, -1.917]}
            rotation={[-1.82, 0, 0]}
          >
            <group name="Object_8" position={[0, -0.185, -0.149]}>
              <mesh
                name="mesh_1"
                castShadow
                receiveShadow
                geometry={nodes.mesh_1.geometry}
                material={materials.Standard_14}
                position={[-15.138, -14.674, -13.816]}
                scale={0.003}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
});

export default HatModel;
useGLTF.preload("/models/helmet-optimized.glb");
